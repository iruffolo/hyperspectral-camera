#!/usr/bin/python

import numpy as np


def createSeq(numLeds, numRows, numSeq):

    seq = np.array([np.repeat([x for x in range(0, numLeds)], numRows/numLeds)
                    for i in range(0, numSeq)])

    for i in range(seq.shape[0]):
        np.random.shuffle(seq[i])

    print(seq)
    print(seq.shape)

    return seq


def formatArray(seq, line_len=20):

    s = f"int seq[{seq.shape[0]}][{seq.shape[1]}] =\n{{\n"

    for i in range(seq.shape[0]):
        s += "\t{\n\t"
        for j in range(int(seq.shape[1]/line_len)):
            for k in range(line_len):
                s += f"{seq[i][k + line_len*j]}, "
            s += "\n\t"
        s += "},\n"
    s += "};"

    print(s)
    return s


if __name__ == "__main__":
    print("Generating Sequence")

    numLeds = 10
    numSeq = 5
    numRows = 1000

    seq = createSeq(numLeds, numRows, numSeq)

    s = formatArray(seq)

    with open("seq.cpp", "w") as f:
        f.write("// This file is auto generated by gen_sequence.py\n\n")
        f.write("#include \"seq.h\"\n\n")
        f.write(s)

    with open("seq.h", "w") as f:
        f.write("// This file is auto generated by gen_sequence.py\n\n")
        f.write("#ifndef SEQ\n")
        f.write("#define SEQ\n\n")
        f.write(f"static constexpr int NUM_SEQ = {numSeq};\n")
        f.write(f"static constexpr int NUM_ROW = {numRows};\n\n")
        f.write("extern int seq[NUM_SEQ][NUM_ROW];\n\n")
        f.write("#endif")
