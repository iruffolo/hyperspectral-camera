#!/usr/bin/python

import numpy as np
import itertools


def createSeq(numLeds, numMplx, numRows, numSeq, seed=42):
    np.random.seed(seed)

    x = itertools.combinations(np.array(range(numLeds)), numMplx)
    x = np.array(list(x))
    x = np.repeat([i for i in x], int(numRows/x.shape[0]), axis=0)

    seq = np.repeat(x[np.newaxis, :, :], numSeq, axis=0)

    for i in range(seq.shape[0]):
        np.random.shuffle(seq[i])

    # print(seq)
    # print(f"Sequence shape {seq.shape}")

    return seq, x.shape[0]


def formatArray(seq, numMplx=1, line_len=10):

    s = f"int seq_{numMplx-1}[{seq.shape[0]}][{seq.shape[1]}][{seq.shape[2]}] =\n{{\n"
    _ = "}}"  # Dumb code formating bug

    line_len = int(line_len/numMplx)

    for i in range(seq.shape[0]):
        s += "\t{\n\t"
        for j in range(int(seq.shape[1]/line_len)):
            for k in range(line_len):
                s += "{"
                for h in range(numMplx):
                    s += f"{seq[i][k + line_len*j][h]},"
                s += "}, "
            s += "\n\t"
        s += "},\n"
    s += "};"

    return s


if __name__ == "__main__":
    print("Generating Sequence")

    numLeds = 11    # Total number of LEDs to cycle through
    numRows = 500   # Targer number of rows pattern should repeat for
    numSeq = 5      # Number of unique shuffled patterns
    numMplx = 5    # Max number of LEDs to be multiplexed

    s = [createSeq(numLeds, x, numRows, numSeq) for x in range(1, numMplx + 1)]

    for seq in s: 
        print(seq[1], seq[0])
        np.save(f"seq{seq[0].shape[2]}", seq[0])

    # Generate header file
    with open("seq.h", "w") as f:
        f.write("// This file is auto generated by gen_sequence.py\n\n")
        f.write("#ifndef SEQ\n")
        f.write("#define SEQ\n\n")

        f.write(f"constexpr int NUM_SEQ = {numSeq};\n")
        f.write(f"constexpr int NUM_ROW[{numMplx}] = {{")
        _ = "}}"

        for i in range(numMplx):
            f.write(f"{s[i][1]},")
        f.write("};\n\n")

        for i in range(numMplx):
            f.write(f"extern int seq_{i}[NUM_SEQ][{s[i][1]}][{i+1}];\n")

        f.write("\n#endif")

    # Generate Cpp file
    with open("seq.cpp", "w") as f:
        f.write("// This file is auto generated by gen_sequence.py\n\n")
        f.write("#include \"seq.h\"\n\n")

        for i in range(numMplx):
            fmt_s = formatArray(s[i][0], i+1)
            f.write("\n")
            f.write(fmt_s)
            f.write("\n")
